name: carenet-front CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. 저장소의 코드를 가져오기
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Node.js 환경 설정
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      # 3. Vite 프로젝트 빌드
      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      - name: ssh key with passphrase
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          port: ${{ secrets.PORT }}
          source: "./dist"
          target: ${{ secrets.REMOTE_PATH }}

#      - name: Create SSH Key
#        run: |
#          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/private-key.pem
#          chmod 600 ~/private-key.pem
#      - name: Create SSH directory
#        run: |
#          mkdir -p ~/.ssh
#      - name: Add known host
#        run: |
#          ssh-keyscan ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts
#      - name: Copy files to remote server
#        run: |
#          cd ${{ github.workspace }}
#          scp -i ~/private-key.pem -r ./* ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.REMOTE_TARGET }}
#          echo "Copied files to remote server"


#      # 4. 빌드된 파일을 원격 서버로 전송 (scp 사용)
#      - name: Copy files via SCP
#        run: |
#          scp -P 122 -r ./dist noah@220.88.103.159:/var/www/carenet/frontend
#        env:
#          # 원격 서버 SSH 비밀번호나 개인 키
#          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#
#      # 5. 원격 서버에서 배포 스크립트 실행 (예: 서비스 재시작)
#      - name: Restart service via SSH
#        run: |
#          ssh -p 122 noah@220.88.103.159 'bash /var/www/carenet/deploy.sh'
#        env:
#          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
